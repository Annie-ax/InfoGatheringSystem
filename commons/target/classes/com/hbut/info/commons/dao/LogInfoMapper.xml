<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 <mapper namespace="com.hbut.info.commons.dao.LogInfoMapper">
    <resultMap type="com.hbut.info.commons.model.LogInfo"  id="logInfoResultMap">
        <id property="id" column="id"/>
        <result property="source" column="source"/>
        <result property="createTime" column="create_time"/>
        <result property="timeDate" column="time_date"/>
        <result property="timeSecond" column="time_second"/>
        <result property="pid" column="pid"/>
        <result property="level" column="log_level"/>
        <result property="msg" column="msg"/>
    </resultMap>

    <select id="createLogTable" parameterType="HashMap">
        CREATE TABLE `${tableName}` (
        `id` bigint(20) NOT NULL AUTO_INCREMENT,
        `source` varchar(255) DEFAULT NULL COMMENT '日志信息来源',
        `create_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
        `time_date` timestamp NULL COMMENT '日志消息产生时间',
        `time_second` mediumint(9) DEFAULT NULL COMMENT '消息产生时的毫秒值',
        `pid` int(11) DEFAULT NULL COMMENT '产生消息的进程号',
        `log_level` int(11) DEFAULT NULL COMMENT '日志信息等级 1：正常 2：警告 3：错误',
        `msg` varchar(255) DEFAULT NULL COMMENT '消息内容',
        PRIMARY KEY (`id`)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
    </select>

    <select id="selectAll" parameterType="HashMap" resultMap="logInfoResultMap">
        select * from ${tableName}
    </select>

    <select id="selectByPage" resultMap="logInfoResultMap" parameterType="com.hbut.info.commons.model.Page">
        select * from ${tableName} limit #{startPage},#{pageSize}
    </select>

    <select id="selectRecord" parameterType="HashMap" resultType="int">
        select count(*) from ${tableName}
    </select>

    <select id="selectByPage_pid" resultMap="logInfoResultMap" parameterType="HashMap">
        select * from ${page.tableName} where pid = #{pid} limit #{page.startPage},#{page.pageSize}
    </select>

    <select id="selectByPage_level" resultMap="logInfoResultMap" parameterType="HashMap">
        select * from ${page.tableName} where log_level = #{level} limit #{page.startPage},#{page.pageSize}
    </select>

    <select id="selectByPage_level_pid" resultMap="logInfoResultMap" parameterType="HashMap">
        select * from ${page.tableName} where log_level = #{level} and pid = #{pid} limit #{page.startPage},#{page.pageSize}
    </select>

    <select id="countByLevel" resultType="int" parameterType="HashMap">
        select count(*) from ${tableName} where log_level = #{level}
    </select>

    <select id="countByPid" resultType="int" parameterType="HashMap">
        select count(*) from ${tableName} where pid = #{pid}
    </select>

    <select id="countByPidAndLevel" resultType="int" parameterType="HashMap">
        select count(*) from ${tableName} where pid = #{pid} and log_level = #{level}
    </select>

    <insert id="insert" parameterType="HashMap" useGeneratedKeys="true" keyColumn="id">
        insert into `${tableName}` (source, create_time, time_date, time_second, pid, log_level,msg) values
        (#{log.source},#{log.createTime},#{log.timeDate},#{log.timeSecond},#{log.pid},#{log.level},#{log.msg})
    </insert>

    <insert id="insertList" parameterType="HashMap">
        <foreach collection="list" item="item" index="index" separator=";">
            insert into `${item.tableName}` (source, create_time, time_date, time_second, pid, log_level,
            msg) values
            (#{item.source},#{item.createTime},#{item.timeDate},#{item.timeSecond},#{item.pid},#{item.level}
            ,#{item.msg})
        </foreach>
    </insert>

 </mapper>